{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gowrisubha K\\\\Downloads\\\\caster-admin\\\\client\\\\src\\\\components\\\\User\\\\User.jsx\";\nimport React from 'react';\nimport './User.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst User = () => {\n  const sampleData = [{\n    'Base Station': 'BS001',\n    Users: ['John Doe', 'Gowrii']\n  }, {\n    'Base Station': 'BS002',\n    Users: ['Alice Smith']\n  }, {\n    'Base Station': 'BS003',\n    Users: ['Robert Johnson']\n  }, {\n    'Base Station': 'BS004',\n    Users: ['Emily Brown']\n  }, {\n    'Base Station': 'BS005',\n    Users: ['Michael Lee']\n  }];\n  const tableHeader = ['Base Station', 'Users']; // New column order\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"center\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table mb-0\",\n          style: {\n            border: '2px solid lightgray',\n            borderRadius: '20px',\n            padding: '20px',\n            boxShadow: 'rgba(149,157,165,0.2) 0px 8px 24px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: tableHeader.map((header, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n                className: \"border-gray-200\",\n                style: {\n                  padding: '15px',\n                  borderBottom: '1px solid #ddd',\n                  minWidth: '100px'\n                },\n                children: header\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: sampleData.map((data, dataIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: tableHeader.map((header, headerIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  padding: '15px',\n                  borderBottom: '1px solid #ddd',\n                  width: 'auto'\n                },\n                children: Array.isArray(data[header]) ? data[header].join(', ') : data[header]\n              }, headerIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 21\n              }, this))\n            }, dataIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_c = User;\nexport default User;\nvar _c;\n$RefreshReg$(_c, \"User\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","User","sampleData","Users","tableHeader","children","className","style","border","borderRadius","padding","boxShadow","map","header","index","borderBottom","minWidth","fileName","_jsxFileName","lineNumber","columnNumber","data","dataIndex","headerIndex","width","Array","isArray","join","_c","$RefreshReg$"],"sources":["C:/Users/Gowrisubha K/Downloads/caster-admin/client/src/components/User/User.jsx"],"sourcesContent":["import React from 'react';\r\nimport './User.css';\r\n\r\nconst User = () => {\r\n  const sampleData = [\r\n    {\r\n      'Base Station': 'BS001',\r\n      Users: ['John Doe', 'Gowrii'],\r\n    },\r\n    {\r\n      'Base Station': 'BS002',\r\n      Users: ['Alice Smith'],\r\n    },\r\n    {\r\n      'Base Station': 'BS003',\r\n      Users: ['Robert Johnson'],\r\n    },\r\n    {\r\n      'Base Station': 'BS004',\r\n      Users: ['Emily Brown'],\r\n    },\r\n    {\r\n      'Base Station': 'BS005',\r\n      Users: ['Michael Lee'],\r\n    },\r\n  ];\r\n\r\n  const tableHeader = ['Base Station', 'Users']; // New column order\r\n\r\n  return (\r\n    <div>\r\n      <center>\r\n        <div>\r\n          <table className=\"table mb-0\" style={{ border: '2px solid lightgray', borderRadius: '20px', padding: '20px', boxShadow: 'rgba(149,157,165,0.2) 0px 8px 24px' }}>\r\n            <thead>\r\n              <tr>\r\n                {tableHeader.map((header, index) => (\r\n                  <th key={index} className=\"border-gray-200\" style={{ padding: '15px', borderBottom: '1px solid #ddd', minWidth: '100px' }}>{header}</th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {sampleData.map((data, dataIndex) => (\r\n                <tr key={dataIndex}>\r\n                  {tableHeader.map((header, headerIndex) => (\r\n                    <td key={headerIndex} style={{ padding: '15px', borderBottom: '1px solid #ddd', width: 'auto' }}>\r\n                      {Array.isArray(data[header]) ? data[header].join(', ') : data[header]}\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </center>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}